apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: {{ .Release.Namespace }}
data:
  haproxy.cfg: |
    global
      maxconn 2000
      log stdout format raw local0

    defaults
      log     global
      mode    tcp
      option  tcplog
      timeout connect 5s
      timeout client  1m
      timeout server  1m

    frontend postgres
      bind *:5432
      acl is_read  hdr_end(X-Query-Type) -i SELECT
      use_backend pg_clusters_ro if is_read
      default_backend pg_clusters_rw

    backend pg_clusters_rw
      balance roundrobin
{{- include "pgedge-spock.haproxy-backend-servers" (dict "clusters" .Values.spock.clusters "suffix" "rw" "Release" .Release) | nindent 6 }}

    backend pg_clusters_ro
      balance roundrobin
{{- include "pgedge-spock.haproxy-backend-servers" (dict "clusters" .Values.spock.clusters "suffix" "ro" "Release" .Release) | nindent 6 }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      containers:
        - name: haproxy
          image: haproxy:2.9
          args: ["-f", "/usr/local/etc/haproxy/haproxy.cfg"]
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: config
              mountPath: /usr/local/etc/haproxy
      volumes:
        - name: config
          configMap:
            name: haproxy-config

---
apiVersion: v1
kind: Service
metadata:
  name: haproxy
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: haproxy

