{{- range .Values.spock.clusters }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    "argocd.argoproj.io/sync-wave": "0"
    "argocd.argoproj.io/sync-options": Replace=true
spec:
  instances: {{ .replicas }}
  imageName: {{ .image }}
  enableSuperuserAccess: true
  superuserSecret:
    name: {{ .name }}-superuser
  storage:
    size: {{ .storage.size }}
  walStorage:
    size: 20Gi
  postgresql:
    shared_preload_libraries:
      - "spock"
    parameters:
      shared_buffers: "4GB"
      effective_cache_size: "12GB"
      maintenance_work_mem: "2GB"
      work_mem: "64MB"
      max_connections: "200"
      track_commit_timestamp: "on"
      wal_level: "logical"
      max_replication_slots: "20"
      max_wal_senders: "20"
      max_worker_processes: "12"
      effective_io_concurrency: "200"
      random_page_cost: "1.1"
      checkpoint_completion_target: "0.9"
      # Retain WAL for 7 days
      #wal_keep_size: "20480"         # ~20GB WAL (tune depending on workload)
      #max_wal_size: "10GB"
      #archive_mode: "on"
      #archive_timeout: "60s"
  bootstrap:
    initdb:
      database: {{ $.Values.spock.database }}
      owner: {{ $.Values.spock.owner }}
      secret:
        name: {{ $.Values.spock.appuser.secretName }}  # same for all clusters
      postInitApplicationSQL:
        - CREATE EXTENSION IF NOT EXISTS spock;
---
{{- end }}

